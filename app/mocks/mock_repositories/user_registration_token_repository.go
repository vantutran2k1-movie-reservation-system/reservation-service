// Code generated by MockGen. DO NOT EDIT.
// Source: app/repositories/user_registration_token_repository.go
//
// Generated by this command:
//
//	mockgen -source=app/repositories/user_registration_token_repository.go -destination=app/mocks/mock_repositories/user_registration_token_repository.go -package=mock_repositories
//

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	reflect "reflect"

	models "github.com/vantutran2k1-movie-reservation-system/reservation-service/app/models"
	gomock "go.uber.org/mock/gomock"
	gorm "gorm.io/gorm"
)

// MockUserRegistrationTokenRepository is a mock of UserRegistrationTokenRepository interface.
type MockUserRegistrationTokenRepository struct {
	ctrl     *gomock.Controller
	recorder *MockUserRegistrationTokenRepositoryMockRecorder
}

// MockUserRegistrationTokenRepositoryMockRecorder is the mock recorder for MockUserRegistrationTokenRepository.
type MockUserRegistrationTokenRepositoryMockRecorder struct {
	mock *MockUserRegistrationTokenRepository
}

// NewMockUserRegistrationTokenRepository creates a new mock instance.
func NewMockUserRegistrationTokenRepository(ctrl *gomock.Controller) *MockUserRegistrationTokenRepository {
	mock := &MockUserRegistrationTokenRepository{ctrl: ctrl}
	mock.recorder = &MockUserRegistrationTokenRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserRegistrationTokenRepository) EXPECT() *MockUserRegistrationTokenRepositoryMockRecorder {
	return m.recorder
}

// CreateToken mocks base method.
func (m *MockUserRegistrationTokenRepository) CreateToken(tx *gorm.DB, token *models.UserRegistrationToken) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateToken", tx, token)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateToken indicates an expected call of CreateToken.
func (mr *MockUserRegistrationTokenRepositoryMockRecorder) CreateToken(tx, token any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateToken", reflect.TypeOf((*MockUserRegistrationTokenRepository)(nil).CreateToken), tx, token)
}
