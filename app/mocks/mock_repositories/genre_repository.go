// Code generated by MockGen. DO NOT EDIT.
// Source: app/repositories/genre_repository.go
//
// Generated by this command:
//
//	mockgen -source=app/repositories/genre_repository.go -destination=app/mocks/mock_repositories/genre_repository.go -package=mock_repositories
//

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	reflect "reflect"

	models "github.com/vantutran2k1-movie-reservation-system/reservation-service/app/models"
	gomock "go.uber.org/mock/gomock"
	gorm "gorm.io/gorm"
)

// MockGenreRepository is a mock of GenreRepository interface.
type MockGenreRepository struct {
	ctrl     *gomock.Controller
	recorder *MockGenreRepositoryMockRecorder
}

// MockGenreRepositoryMockRecorder is the mock recorder for MockGenreRepository.
type MockGenreRepositoryMockRecorder struct {
	mock *MockGenreRepository
}

// NewMockGenreRepository creates a new mock instance.
func NewMockGenreRepository(ctrl *gomock.Controller) *MockGenreRepository {
	mock := &MockGenreRepository{ctrl: ctrl}
	mock.recorder = &MockGenreRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGenreRepository) EXPECT() *MockGenreRepositoryMockRecorder {
	return m.recorder
}

// CreateGenre mocks base method.
func (m *MockGenreRepository) CreateGenre(tx *gorm.DB, genre *models.Genre) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateGenre", tx, genre)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateGenre indicates an expected call of CreateGenre.
func (mr *MockGenreRepositoryMockRecorder) CreateGenre(tx, genre any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateGenre", reflect.TypeOf((*MockGenreRepository)(nil).CreateGenre), tx, genre)
}

// GetGenreByName mocks base method.
func (m *MockGenreRepository) GetGenreByName(name string) (*models.Genre, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGenreByName", name)
	ret0, _ := ret[0].(*models.Genre)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGenreByName indicates an expected call of GetGenreByName.
func (mr *MockGenreRepositoryMockRecorder) GetGenreByName(name any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGenreByName", reflect.TypeOf((*MockGenreRepository)(nil).GetGenreByName), name)
}
